buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

import groovy.json.JsonOutput
import groovy.json.JsonSlurper

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'

version = '1.9.3.1'
group = 'net.geforcemods.securitycraft'
archivesBaseName = 'securitycraft'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

processResources { 
	exclude ".cache"
	duplicatesStrategy = 'include'

    //minify json resources
    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

sourceSets.main.resources {
	srcDir 'src/generated/resources' //include generated files
}

minecraft {
    mappings channel: 'parchment', version: '2022.09.04-1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
        client {
            workingDirectory project.file('run/client')
            property 'forge.logging.console.level', 'debug'
            args '-mixin.config=securitycraft.mixins.json'

            mods {
                securitycraft {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.console.level', 'debug'
            args '-nogui', '-mixin.config=securitycraft.mixins.json'

            mods {
                securitycraft {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'securitycraft', '--all', '--output', file('src/generated/resources/')

            mods {
                securitycraft {
                    source sourceSets.main
                }
            }
        }
	}
}

repositories {
    maven { // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
    	url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.80'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    
	implementation fg.deobf("mezz.jei:jei-1.18.2:9.7.0.195")
    implementation fg.deobf("curse.maven:the-one-probe-245211:3671753")
    implementation fg.deobf("curse.maven:jade-324717:3865918")
    implementation fg.deobf("curse.maven:betterf3-401648:3798367")
    implementation fg.deobf("curse.maven:cloth-config-forge-348521:3641133") //betterf3 dependency
    implementation fg.deobf("curse.maven:projecte-226410:3722831")
}

mixin {
    add sourceSets.main, "securitycraft.refmap.json"
}

jar {
	exclude('net/geforcemods/securitycraft/datagen/**') //exclude files from the built jar that are only used to generate the assets & data

    manifest {
        attributes(["Specification-Title": "SecurityCraft",
                    "Specification-Vendor": "Geforce, bl4ckscor3, Redstone_Dubstep",
                    "Specification-Version": "${version}",
                    "Implementation-Title": "SecurityCraft",
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"Geforce, bl4ckscor3, Redstone_Dubstep",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "MixinConfigs": "securitycraft.mixins.json"],)
    }
}